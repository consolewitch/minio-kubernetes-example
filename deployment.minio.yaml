apiVersion: apps/v1
kind: Deployment
metadata:
  name: minio
  namespace: minio-ns
  labels:
    app: minio
spec:
  strategy:
    type: Recreate
  selector:
    matchLabels:
      kind: minio
  template:
    metadata:
      labels:
        app: minio
        kind: minio
    spec:
      volumes:
      - name: minio-storage
        persistentVolumeClaim:
          claimName: minio-claim
      initContainers:
      - name: minio-bucket-setup
        image: "minio/minio:latest"
        imagePullPolicy:  Always
        volumeMounts:
        - name: minio-storage
          mountPath: "/storage"
        command:
        - mkdir
        - -p #this is to prevent error if they already exist
        - /storage/documents
        - /storage/pictures
        - /storage/videos
      containers:
      - name: minio
        image: "minio/minio:latest"
        imagePullPolicy: Always
        args:
        - server
        - /storage
        - --address
        - :9001
        ports:
        - containerPort: 9001
          hostPort: 9001
        volumeMounts:
        - name: minio-storage
          mountPath: "/storage"
        env:
          - name: MINIO_SETTING
            valueFrom:
              configMapKeyRef:
                name: minio-cm
                key: minio_setting
          - name: MINIO_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                name: minio-secrets
                key: minio_access_key
          - name: MINIO_SECRET_KEY
            valueFrom:
              secretKeyRef:
                name: minio-secrets
                key: minio_secret_key
